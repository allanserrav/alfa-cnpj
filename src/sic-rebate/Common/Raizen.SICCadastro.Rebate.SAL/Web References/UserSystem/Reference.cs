//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Raizen.SICCadastro.Rebate.SAL.UserSystem {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsUserSystemSoap", Namespace="http://cosan.com.br/UserSystem/WS/")]
    public partial class wsUserSystem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginUserSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginActiveDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginInApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIsLoggedInOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfilesByApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAddTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserUpdateTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserAssignProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRemoveProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRemoveAllProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserSetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersByAppProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetornaEmpresaUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuByApplicationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsUserSystem() {
            this.Url = global::Raizen.SICCadastro.Rebate.SAL.Properties.Settings.Default.Raizen_SICCadastro_Rebate_SAL_UserSystem_wsUserSystem;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginUserSystemCompletedEventHandler LoginUserSystemCompleted;
        
        /// <remarks/>
        public event LoginActiveDirectoryCompletedEventHandler LoginActiveDirectoryCompleted;
        
        /// <remarks/>
        public event LoginInApplicationCompletedEventHandler LoginInApplicationCompleted;
        
        /// <remarks/>
        public event UserIsLoggedInCompletedEventHandler UserIsLoggedInCompleted;
        
        /// <remarks/>
        public event LogOffCompletedEventHandler LogOffCompleted;
        
        /// <remarks/>
        public event GetUserPermissionsCompletedEventHandler GetUserPermissionsCompleted;
        
        /// <remarks/>
        public event GetProfilesByApplicationCompletedEventHandler GetProfilesByApplicationCompleted;
        
        /// <remarks/>
        public event UserExistsCompletedEventHandler UserExistsCompleted;
        
        /// <remarks/>
        public event UserAddCompletedEventHandler UserAddCompleted;
        
        /// <remarks/>
        public event UserAddTypeCompletedEventHandler UserAddTypeCompleted;
        
        /// <remarks/>
        public event UserUpdateCompletedEventHandler UserUpdateCompleted;
        
        /// <remarks/>
        public event UserUpdateTypeCompletedEventHandler UserUpdateTypeCompleted;
        
        /// <remarks/>
        public event UserAssignProfilesCompletedEventHandler UserAssignProfilesCompleted;
        
        /// <remarks/>
        public event UserRemoveProfilesCompletedEventHandler UserRemoveProfilesCompleted;
        
        /// <remarks/>
        public event UserRemoveAllProfilesCompletedEventHandler UserRemoveAllProfilesCompleted;
        
        /// <remarks/>
        public event UserChangePasswordCompletedEventHandler UserChangePasswordCompleted;
        
        /// <remarks/>
        public event UserSetPasswordCompletedEventHandler UserSetPasswordCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetUserDetailCompletedEventHandler GetUserDetailCompleted;
        
        /// <remarks/>
        public event GetUsersByAppProfileCompletedEventHandler GetUsersByAppProfileCompleted;
        
        /// <remarks/>
        public event RetornaEmpresaUsuarioCompletedEventHandler RetornaEmpresaUsuarioCompleted;
        
        /// <remarks/>
        public event GetMenuByApplicationCompletedEventHandler GetMenuByApplicationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/LoginUserSystem", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl LoginUserSystem(string siglaApp, string username, string password) {
            object[] results = this.Invoke("LoginUserSystem", new object[] {
                        siglaApp,
                        username,
                        password});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void LoginUserSystemAsync(string siglaApp, string username, string password) {
            this.LoginUserSystemAsync(siglaApp, username, password, null);
        }
        
        /// <remarks/>
        public void LoginUserSystemAsync(string siglaApp, string username, string password, object userState) {
            if ((this.LoginUserSystemOperationCompleted == null)) {
                this.LoginUserSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserSystemOperationCompleted);
            }
            this.InvokeAsync("LoginUserSystem", new object[] {
                        siglaApp,
                        username,
                        password}, this.LoginUserSystemOperationCompleted, userState);
        }
        
        private void OnLoginUserSystemOperationCompleted(object arg) {
            if ((this.LoginUserSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginUserSystemCompleted(this, new LoginUserSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/LoginActiveDirectory", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl LoginActiveDirectory(string siglaApp, string username) {
            object[] results = this.Invoke("LoginActiveDirectory", new object[] {
                        siglaApp,
                        username});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void LoginActiveDirectoryAsync(string siglaApp, string username) {
            this.LoginActiveDirectoryAsync(siglaApp, username, null);
        }
        
        /// <remarks/>
        public void LoginActiveDirectoryAsync(string siglaApp, string username, object userState) {
            if ((this.LoginActiveDirectoryOperationCompleted == null)) {
                this.LoginActiveDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginActiveDirectoryOperationCompleted);
            }
            this.InvokeAsync("LoginActiveDirectory", new object[] {
                        siglaApp,
                        username}, this.LoginActiveDirectoryOperationCompleted, userState);
        }
        
        private void OnLoginActiveDirectoryOperationCompleted(object arg) {
            if ((this.LoginActiveDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginActiveDirectoryCompleted(this, new LoginActiveDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/LoginInApplication", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl LoginInApplication(string siglaApp, string username, string password) {
            object[] results = this.Invoke("LoginInApplication", new object[] {
                        siglaApp,
                        username,
                        password});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void LoginInApplicationAsync(string siglaApp, string username, string password) {
            this.LoginInApplicationAsync(siglaApp, username, password, null);
        }
        
        /// <remarks/>
        public void LoginInApplicationAsync(string siglaApp, string username, string password, object userState) {
            if ((this.LoginInApplicationOperationCompleted == null)) {
                this.LoginInApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginInApplicationOperationCompleted);
            }
            this.InvokeAsync("LoginInApplication", new object[] {
                        siglaApp,
                        username,
                        password}, this.LoginInApplicationOperationCompleted, userState);
        }
        
        private void OnLoginInApplicationOperationCompleted(object arg) {
            if ((this.LoginInApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginInApplicationCompleted(this, new LoginInApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserIsLoggedIn", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserIsLoggedIn(string siglaApp, string username) {
            object[] results = this.Invoke("UserIsLoggedIn", new object[] {
                        siglaApp,
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserIsLoggedInAsync(string siglaApp, string username) {
            this.UserIsLoggedInAsync(siglaApp, username, null);
        }
        
        /// <remarks/>
        public void UserIsLoggedInAsync(string siglaApp, string username, object userState) {
            if ((this.UserIsLoggedInOperationCompleted == null)) {
                this.UserIsLoggedInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIsLoggedInOperationCompleted);
            }
            this.InvokeAsync("UserIsLoggedIn", new object[] {
                        siglaApp,
                        username}, this.UserIsLoggedInOperationCompleted, userState);
        }
        
        private void OnUserIsLoggedInOperationCompleted(object arg) {
            if ((this.UserIsLoggedInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIsLoggedInCompleted(this, new UserIsLoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/LogOff", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl LogOff(string siglaApp, string username) {
            object[] results = this.Invoke("LogOff", new object[] {
                        siglaApp,
                        username});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void LogOffAsync(string siglaApp, string username) {
            this.LogOffAsync(siglaApp, username, null);
        }
        
        /// <remarks/>
        public void LogOffAsync(string siglaApp, string username, object userState) {
            if ((this.LogOffOperationCompleted == null)) {
                this.LogOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOffOperationCompleted);
            }
            this.InvokeAsync("LogOff", new object[] {
                        siglaApp,
                        username}, this.LogOffOperationCompleted, userState);
        }
        
        private void OnLogOffOperationCompleted(object arg) {
            if ((this.LogOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOffCompleted(this, new LogOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/GetUserPermissions", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserPermissions(string siglaApp, string username) {
            object[] results = this.Invoke("GetUserPermissions", new object[] {
                        siglaApp,
                        username});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPermissionsAsync(string siglaApp, string username) {
            this.GetUserPermissionsAsync(siglaApp, username, null);
        }
        
        /// <remarks/>
        public void GetUserPermissionsAsync(string siglaApp, string username, object userState) {
            if ((this.GetUserPermissionsOperationCompleted == null)) {
                this.GetUserPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPermissionsOperationCompleted);
            }
            this.InvokeAsync("GetUserPermissions", new object[] {
                        siglaApp,
                        username}, this.GetUserPermissionsOperationCompleted, userState);
        }
        
        private void OnGetUserPermissionsOperationCompleted(object arg) {
            if ((this.GetUserPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPermissionsCompleted(this, new GetUserPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/GetProfilesByApplication", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetProfilesByApplication(string siglaApp) {
            object[] results = this.Invoke("GetProfilesByApplication", new object[] {
                        siglaApp});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfilesByApplicationAsync(string siglaApp) {
            this.GetProfilesByApplicationAsync(siglaApp, null);
        }
        
        /// <remarks/>
        public void GetProfilesByApplicationAsync(string siglaApp, object userState) {
            if ((this.GetProfilesByApplicationOperationCompleted == null)) {
                this.GetProfilesByApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfilesByApplicationOperationCompleted);
            }
            this.InvokeAsync("GetProfilesByApplication", new object[] {
                        siglaApp}, this.GetProfilesByApplicationOperationCompleted, userState);
        }
        
        private void OnGetProfilesByApplicationOperationCompleted(object arg) {
            if ((this.GetProfilesByApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfilesByApplicationCompleted(this, new GetProfilesByApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserExists", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserExists(string username) {
            object[] results = this.Invoke("UserExists", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserExistsAsync(string username) {
            this.UserExistsAsync(username, null);
        }
        
        /// <remarks/>
        public void UserExistsAsync(string username, object userState) {
            if ((this.UserExistsOperationCompleted == null)) {
                this.UserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserExistsOperationCompleted);
            }
            this.InvokeAsync("UserExists", new object[] {
                        username}, this.UserExistsOperationCompleted, userState);
        }
        
        private void OnUserExistsOperationCompleted(object arg) {
            if ((this.UserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserExistsCompleted(this, new UserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserAdd", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserAdd(string username, string password, string email, string name, System.DateTime expirydate, eStatus status, string userid) {
            object[] results = this.Invoke("UserAdd", new object[] {
                        username,
                        password,
                        email,
                        name,
                        expirydate,
                        status,
                        userid});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserAddAsync(string username, string password, string email, string name, System.DateTime expirydate, eStatus status, string userid) {
            this.UserAddAsync(username, password, email, name, expirydate, status, userid, null);
        }
        
        /// <remarks/>
        public void UserAddAsync(string username, string password, string email, string name, System.DateTime expirydate, eStatus status, string userid, object userState) {
            if ((this.UserAddOperationCompleted == null)) {
                this.UserAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAddOperationCompleted);
            }
            this.InvokeAsync("UserAdd", new object[] {
                        username,
                        password,
                        email,
                        name,
                        expirydate,
                        status,
                        userid}, this.UserAddOperationCompleted, userState);
        }
        
        private void OnUserAddOperationCompleted(object arg) {
            if ((this.UserAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAddCompleted(this, new UserAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserAddType", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserAddType(string username, string password, string email, string name, System.DateTime expirydate, eStatus status, string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> typeUser) {
            object[] results = this.Invoke("UserAddType", new object[] {
                        username,
                        password,
                        email,
                        name,
                        expirydate,
                        status,
                        userid,
                        typeUser});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserAddTypeAsync(string username, string password, string email, string name, System.DateTime expirydate, eStatus status, string userid, System.Nullable<byte> typeUser) {
            this.UserAddTypeAsync(username, password, email, name, expirydate, status, userid, typeUser, null);
        }
        
        /// <remarks/>
        public void UserAddTypeAsync(string username, string password, string email, string name, System.DateTime expirydate, eStatus status, string userid, System.Nullable<byte> typeUser, object userState) {
            if ((this.UserAddTypeOperationCompleted == null)) {
                this.UserAddTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAddTypeOperationCompleted);
            }
            this.InvokeAsync("UserAddType", new object[] {
                        username,
                        password,
                        email,
                        name,
                        expirydate,
                        status,
                        userid,
                        typeUser}, this.UserAddTypeOperationCompleted, userState);
        }
        
        private void OnUserAddTypeOperationCompleted(object arg) {
            if ((this.UserAddTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAddTypeCompleted(this, new UserAddTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserUpdate", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserUpdate(string username, string email, string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> expirydate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<eStatus> status, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> erasePassword, string userid) {
            object[] results = this.Invoke("UserUpdate", new object[] {
                        username,
                        email,
                        name,
                        expirydate,
                        status,
                        erasePassword,
                        userid});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserUpdateAsync(string username, string email, string name, System.Nullable<System.DateTime> expirydate, System.Nullable<eStatus> status, System.Nullable<bool> erasePassword, string userid) {
            this.UserUpdateAsync(username, email, name, expirydate, status, erasePassword, userid, null);
        }
        
        /// <remarks/>
        public void UserUpdateAsync(string username, string email, string name, System.Nullable<System.DateTime> expirydate, System.Nullable<eStatus> status, System.Nullable<bool> erasePassword, string userid, object userState) {
            if ((this.UserUpdateOperationCompleted == null)) {
                this.UserUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserUpdateOperationCompleted);
            }
            this.InvokeAsync("UserUpdate", new object[] {
                        username,
                        email,
                        name,
                        expirydate,
                        status,
                        erasePassword,
                        userid}, this.UserUpdateOperationCompleted, userState);
        }
        
        private void OnUserUpdateOperationCompleted(object arg) {
            if ((this.UserUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserUpdateCompleted(this, new UserUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserUpdateType", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserUpdateType(string username, string email, string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> expirydate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<eStatus> status, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> erasePassword, string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<byte> typeUser) {
            object[] results = this.Invoke("UserUpdateType", new object[] {
                        username,
                        email,
                        name,
                        expirydate,
                        status,
                        erasePassword,
                        userid,
                        typeUser});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserUpdateTypeAsync(string username, string email, string name, System.Nullable<System.DateTime> expirydate, System.Nullable<eStatus> status, System.Nullable<bool> erasePassword, string userid, System.Nullable<byte> typeUser) {
            this.UserUpdateTypeAsync(username, email, name, expirydate, status, erasePassword, userid, typeUser, null);
        }
        
        /// <remarks/>
        public void UserUpdateTypeAsync(string username, string email, string name, System.Nullable<System.DateTime> expirydate, System.Nullable<eStatus> status, System.Nullable<bool> erasePassword, string userid, System.Nullable<byte> typeUser, object userState) {
            if ((this.UserUpdateTypeOperationCompleted == null)) {
                this.UserUpdateTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserUpdateTypeOperationCompleted);
            }
            this.InvokeAsync("UserUpdateType", new object[] {
                        username,
                        email,
                        name,
                        expirydate,
                        status,
                        erasePassword,
                        userid,
                        typeUser}, this.UserUpdateTypeOperationCompleted, userState);
        }
        
        private void OnUserUpdateTypeOperationCompleted(object arg) {
            if ((this.UserUpdateTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserUpdateTypeCompleted(this, new UserUpdateTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserAssignProfiles", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserAssignProfiles(string username, int[] arrProfiles) {
            object[] results = this.Invoke("UserAssignProfiles", new object[] {
                        username,
                        arrProfiles});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserAssignProfilesAsync(string username, int[] arrProfiles) {
            this.UserAssignProfilesAsync(username, arrProfiles, null);
        }
        
        /// <remarks/>
        public void UserAssignProfilesAsync(string username, int[] arrProfiles, object userState) {
            if ((this.UserAssignProfilesOperationCompleted == null)) {
                this.UserAssignProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserAssignProfilesOperationCompleted);
            }
            this.InvokeAsync("UserAssignProfiles", new object[] {
                        username,
                        arrProfiles}, this.UserAssignProfilesOperationCompleted, userState);
        }
        
        private void OnUserAssignProfilesOperationCompleted(object arg) {
            if ((this.UserAssignProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserAssignProfilesCompleted(this, new UserAssignProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserRemoveProfiles", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserRemoveProfiles(string username, int[] arrProfiles) {
            object[] results = this.Invoke("UserRemoveProfiles", new object[] {
                        username,
                        arrProfiles});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserRemoveProfilesAsync(string username, int[] arrProfiles) {
            this.UserRemoveProfilesAsync(username, arrProfiles, null);
        }
        
        /// <remarks/>
        public void UserRemoveProfilesAsync(string username, int[] arrProfiles, object userState) {
            if ((this.UserRemoveProfilesOperationCompleted == null)) {
                this.UserRemoveProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRemoveProfilesOperationCompleted);
            }
            this.InvokeAsync("UserRemoveProfiles", new object[] {
                        username,
                        arrProfiles}, this.UserRemoveProfilesOperationCompleted, userState);
        }
        
        private void OnUserRemoveProfilesOperationCompleted(object arg) {
            if ((this.UserRemoveProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRemoveProfilesCompleted(this, new UserRemoveProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserRemoveAllProfiles", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserRemoveAllProfiles(string siglaApp, string username) {
            object[] results = this.Invoke("UserRemoveAllProfiles", new object[] {
                        siglaApp,
                        username});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserRemoveAllProfilesAsync(string siglaApp, string username) {
            this.UserRemoveAllProfilesAsync(siglaApp, username, null);
        }
        
        /// <remarks/>
        public void UserRemoveAllProfilesAsync(string siglaApp, string username, object userState) {
            if ((this.UserRemoveAllProfilesOperationCompleted == null)) {
                this.UserRemoveAllProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRemoveAllProfilesOperationCompleted);
            }
            this.InvokeAsync("UserRemoveAllProfiles", new object[] {
                        siglaApp,
                        username}, this.UserRemoveAllProfilesOperationCompleted, userState);
        }
        
        private void OnUserRemoveAllProfilesOperationCompleted(object arg) {
            if ((this.UserRemoveAllProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRemoveAllProfilesCompleted(this, new UserRemoveAllProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserChangePassword", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserChangePassword(string username, string oldPassword, string newPassword) {
            object[] results = this.Invoke("UserChangePassword", new object[] {
                        username,
                        oldPassword,
                        newPassword});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserChangePasswordAsync(string username, string oldPassword, string newPassword) {
            this.UserChangePasswordAsync(username, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void UserChangePasswordAsync(string username, string oldPassword, string newPassword, object userState) {
            if ((this.UserChangePasswordOperationCompleted == null)) {
                this.UserChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserChangePasswordOperationCompleted);
            }
            this.InvokeAsync("UserChangePassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, this.UserChangePasswordOperationCompleted, userState);
        }
        
        private void OnUserChangePasswordOperationCompleted(object arg) {
            if ((this.UserChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserChangePasswordCompleted(this, new UserChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/UserSetPassword", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageControl UserSetPassword(string username, string newPassword) {
            object[] results = this.Invoke("UserSetPassword", new object[] {
                        username,
                        newPassword});
            return ((MessageControl)(results[0]));
        }
        
        /// <remarks/>
        public void UserSetPasswordAsync(string username, string newPassword) {
            this.UserSetPasswordAsync(username, newPassword, null);
        }
        
        /// <remarks/>
        public void UserSetPasswordAsync(string username, string newPassword, object userState) {
            if ((this.UserSetPasswordOperationCompleted == null)) {
                this.UserSetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserSetPasswordOperationCompleted);
            }
            this.InvokeAsync("UserSetPassword", new object[] {
                        username,
                        newPassword}, this.UserSetPasswordOperationCompleted, userState);
        }
        
        private void OnUserSetPasswordOperationCompleted(object arg) {
            if ((this.UserSetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserSetPasswordCompleted(this, new UserSetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/GetUsers", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUsers(string siglaApp) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        siglaApp});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string siglaApp) {
            this.GetUsersAsync(siglaApp, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string siglaApp, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        siglaApp}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/GetUserDetail", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserDetail(string username) {
            object[] results = this.Invoke("GetUserDetail", new object[] {
                        username});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(string username) {
            this.GetUserDetailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(string username, object userState) {
            if ((this.GetUserDetailOperationCompleted == null)) {
                this.GetUserDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserDetail", new object[] {
                        username}, this.GetUserDetailOperationCompleted, userState);
        }
        
        private void OnGetUserDetailOperationCompleted(object arg) {
            if ((this.GetUserDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailCompleted(this, new GetUserDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/GetUsersByAppProfile", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUsersByAppProfile(string appsigla, string profilename) {
            object[] results = this.Invoke("GetUsersByAppProfile", new object[] {
                        appsigla,
                        profilename});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersByAppProfileAsync(string appsigla, string profilename) {
            this.GetUsersByAppProfileAsync(appsigla, profilename, null);
        }
        
        /// <remarks/>
        public void GetUsersByAppProfileAsync(string appsigla, string profilename, object userState) {
            if ((this.GetUsersByAppProfileOperationCompleted == null)) {
                this.GetUsersByAppProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersByAppProfileOperationCompleted);
            }
            this.InvokeAsync("GetUsersByAppProfile", new object[] {
                        appsigla,
                        profilename}, this.GetUsersByAppProfileOperationCompleted, userState);
        }
        
        private void OnGetUsersByAppProfileOperationCompleted(object arg) {
            if ((this.GetUsersByAppProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersByAppProfileCompleted(this, new GetUsersByAppProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/RetornaEmpresaUsuario", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetornaEmpresaUsuario(string username) {
            object[] results = this.Invoke("RetornaEmpresaUsuario", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetornaEmpresaUsuarioAsync(string username) {
            this.RetornaEmpresaUsuarioAsync(username, null);
        }
        
        /// <remarks/>
        public void RetornaEmpresaUsuarioAsync(string username, object userState) {
            if ((this.RetornaEmpresaUsuarioOperationCompleted == null)) {
                this.RetornaEmpresaUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetornaEmpresaUsuarioOperationCompleted);
            }
            this.InvokeAsync("RetornaEmpresaUsuario", new object[] {
                        username}, this.RetornaEmpresaUsuarioOperationCompleted, userState);
        }
        
        private void OnRetornaEmpresaUsuarioOperationCompleted(object arg) {
            if ((this.RetornaEmpresaUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetornaEmpresaUsuarioCompleted(this, new RetornaEmpresaUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cosan.com.br/UserSystem/WS/GetMenuByApplication", RequestNamespace="http://cosan.com.br/UserSystem/WS/", ResponseNamespace="http://cosan.com.br/UserSystem/WS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMenuByApplication(string siglaApp, string login) {
            object[] results = this.Invoke("GetMenuByApplication", new object[] {
                        siglaApp,
                        login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuByApplicationAsync(string siglaApp, string login) {
            this.GetMenuByApplicationAsync(siglaApp, login, null);
        }
        
        /// <remarks/>
        public void GetMenuByApplicationAsync(string siglaApp, string login, object userState) {
            if ((this.GetMenuByApplicationOperationCompleted == null)) {
                this.GetMenuByApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuByApplicationOperationCompleted);
            }
            this.InvokeAsync("GetMenuByApplication", new object[] {
                        siglaApp,
                        login}, this.GetMenuByApplicationOperationCompleted, userState);
        }
        
        private void OnGetMenuByApplicationOperationCompleted(object arg) {
            if ((this.GetMenuByApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuByApplicationCompleted(this, new GetMenuByApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cosan.com.br/UserSystem/WS/")]
    public partial class MessageControl {
        
        private bool successField;
        
        private string messageField;
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cosan.com.br/UserSystem/WS/")]
    public enum eStatus {
        
        /// <remarks/>
        Ativo,
        
        /// <remarks/>
        Inativo,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginUserSystemCompletedEventHandler(object sender, LoginUserSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginUserSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginUserSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginActiveDirectoryCompletedEventHandler(object sender, LoginActiveDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginActiveDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginActiveDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginInApplicationCompletedEventHandler(object sender, LoginInApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginInApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginInApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserIsLoggedInCompletedEventHandler(object sender, UserIsLoggedInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIsLoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIsLoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LogOffCompletedEventHandler(object sender, LogOffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUserPermissionsCompletedEventHandler(object sender, GetUserPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetProfilesByApplicationCompletedEventHandler(object sender, GetProfilesByApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfilesByApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfilesByApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserExistsCompletedEventHandler(object sender, UserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserAddCompletedEventHandler(object sender, UserAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserAddTypeCompletedEventHandler(object sender, UserAddTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAddTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAddTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserUpdateCompletedEventHandler(object sender, UserUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserUpdateTypeCompletedEventHandler(object sender, UserUpdateTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserUpdateTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserUpdateTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserAssignProfilesCompletedEventHandler(object sender, UserAssignProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserAssignProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserAssignProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserRemoveProfilesCompletedEventHandler(object sender, UserRemoveProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserRemoveProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRemoveProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserRemoveAllProfilesCompletedEventHandler(object sender, UserRemoveAllProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserRemoveAllProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRemoveAllProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserChangePasswordCompletedEventHandler(object sender, UserChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UserSetPasswordCompletedEventHandler(object sender, UserSetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserSetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserSetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageControl Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageControl)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUserDetailCompletedEventHandler(object sender, GetUserDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUsersByAppProfileCompletedEventHandler(object sender, GetUsersByAppProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersByAppProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersByAppProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RetornaEmpresaUsuarioCompletedEventHandler(object sender, RetornaEmpresaUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetornaEmpresaUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetornaEmpresaUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMenuByApplicationCompletedEventHandler(object sender, GetMenuByApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuByApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuByApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591